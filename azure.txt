Episode Introduction
The topic for today is cloud service models. What are their differences and what are their key characteristics? Stay tuned. As always, at the beginning of the episode, let me start with the session objectives.

Skills Measured
What is being tested during the exam? In this section, you need to understand what exactly is infrastructure, platform, and software as a service, but also understand them well enough to be able to compare and contrast them between each other. And to better understand that, we need to first understand what exactly is considered infrastructure, platform, and software. For that reason, I prepared you a very small exercise, an example.

Example Scenario
So let's imagine we are a startup company, and we want to host our own application and build the entire infrastructure for that reason. Of course, the first thing we will need to do is to purchase some servers. So all the hardware that will actually run the applications themselves. Obviously, our servers need to be able to connect to the internet, therefore, we will need to provide all the networking infrastructure as well, including the internet connectivity itself. Because every server needs storage, you will need to additionally provide a storage infrastructure. Another doors, our hard drives or solid-state drives, some RAID arrays, and things like that. We need to provide that. Additionally, once this is in place, you have all the hardware needed in order to run the server.

Now, in order to ensure the best utilization of the hardware that you have, you will want to run some virtualization software so that you can run multiple virtual machines on a single hardware piece so that you can host multiple applications but still maintain the total separation of the environments. And virtualization software will allow you to do that. At that point, you will start creating multiple virtual machines in order to host your applications. All those virtual machines will need an operating system, whether that's Windows or Linux or any other operating system on the market. As the operating system is in place, you additionally want to install middleware, which typically means all the software additions that you need in order to run the system and the application itself. And a typical application will additionally need a runtime, so another layer of the software which will host your application. If this is a web application, this could be IIS web container. If it's a container application, maybe Docker. But runtime is an additional layer that you will need to maintain yourself.

Once all of those layers are in place, we are now finally ready to host our application and application data on that system. Well, there are quite a few layers on the screen, a few clear distinctions can be made here. The first four layers from the bottom are so-called infrastructure. So all the layers that directly are related to the hardware and the virtualization. Next layers can be grouped as platform layers. So operating system, middleware, and runtime, these are all the software, all the system and configuration that is required for you to run the application but not the application itself. And the last part, the application and the data itself, is so-called software layer.

And the asset service part of our episode means who will manage what. If you manage all of those layers, that means we're talking about on-premises. So the clear ownership is on you. You manage all the infrastructure, platform, and the software. And cloud providers not even involved. But if you decide to outsource the infrastructure, purchase the infrastructure from the cloud provider to let Microsoft manage the infrastructure while you manage the platform and software, this is so-called infrastructure as a service. So the ownership of that part goes to a cloud provider. In this case, Microsoft will manage all the networking hardware and the virtualization itself while you will manage the platform and the software part. Typical use cases here are migration of workloads from the on-premises, testing and development, but also extending your on-premise environment to the capacity of the cloud so that you can create storage backup and disaster recovery scenarios.

The list of services used in order to implement infrastructure-as-a-service solutions is quite long, but typically you will see things like virtual machines, virtual networks, managed disks, or one of many services that you can use for this purpose. But in general, the rule of thumb is if someone says that they have infrastructure as a service solution, that means they have a lot of virtual machines, and probably this is the skill set they're looking for.

If you're designing for the cloud, you most likely will go one level up, so you will allow Microsoft to manage the platform and the infrastructure part while you just build your own applications. In that case, we are talking about platform as a service. In this model, the cloud provider will manage the infrastructure and the platform. So, besides the hardware, Microsoft will need to manage the operating system, all the security patches, all the middleware, and the runtime to host your application. And you will only need to build and manage your own applications. Typically, this model is used whenever you're developing cloud applications. This could be state-of-the-art web applications, AI, machine learning, business analytic solutionsâ€”well, pretty much anything. If you're building applications, you're most likely using platform as a service solutions. In this case, we can talk about SQL for relational databases, app service for web hosting, logic apps for enterprise integrations, function apps for serverless Azure, one of the dozens or even hundreds of other services allowing you to take advantage of cloud in a platform as a service model.

And if you decide to outsource everything to Microsoft, that means you are using software as a service model. In that case, the ownership of the cloud provider is everything, and there's nothing on you. You could think of what would be the case of software as a service. Usually, this means buying off-the-shelf applications, applications like Outlook, Skype, OneDrive, and all the other business applications that you're probably using every day. This is software as a service from Microsoft manages everything, and you just use the applications.

Comparing Service Models
I will now summarize the differences between those service models but from a little bit different angle. If you let the cloud provider manage the physical data center buildings, networking, security, servers, and storage, we are talking about infrastructure as a service. If that cloud provider additionally manages the operating system and the development tools, we are talking about the platform as a service. But if that cloud provider additionally manages the applications and the data, we are talking about the software as a service. Maybe this view will let you better understand the scope of responsibilities for each of those service models, and that's pretty much it.
