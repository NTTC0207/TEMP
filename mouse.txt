import React, { useState } from 'react';

const ZoomableImage = () => {
  const [zoomLevel, setZoomLevel] = useState(1);
  const [cursorPosition, setCursorPosition] = useState({ x: 0, y: 0 });

  const handleZoom = (event) => {
    // Calculate the cursor position relative to the image
    const image = event.currentTarget;
    const rect = image.getBoundingClientRect();
    const x = event.clientX - rect.left;
    const y = event.clientY - rect.top;

    // Calculate the new zoom level
    const newZoomLevel = zoomLevel + (event.deltaY > 0 ? -0.1 : 0.1);

    if (newZoomLevel >= 1 && newZoomLevel <= 3) {
      setZoomLevel(newZoomLevel);

      // Adjust the cursor position to maintain the zoom center
      const newX = (x - image.offsetWidth / 2) * (newZoomLevel - 1);
      const newY = (y - image.offsetHeight / 2) * (newZoomLevel - 1);
      setCursorPosition({ x: newX, y: newY });
    }
  };

  return (
    <div onWheel={handleZoom} style={{ overflow: 'hidden', width: '300px', height: '300px' }}>
      <div
        style={{
          transform: `scale(${zoomLevel}) translate(${cursorPosition.x}px, ${cursorPosition.y}px)`,
        }}
      >
        <img
          src="your-image-source.jpg"
          alt="Zoomable Image"
        />
      </div>
    </div>
  );
};

export default ZoomableImage;
